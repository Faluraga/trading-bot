{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Btn from \"../components/Btn\";\nimport firebase from 'firebase/app';\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nvar styles = StyleSheet.create({\n  view: {\n    flex: 2,\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  fondo: {\n    flex: 2,\n    height: '100%',\n    width: '100%',\n    resizeMode: 'contain',\n    alignItems: 'center',\n    justifyContent: \"center\",\n    marginBottom: \"-10%\"\n  },\n  textbox_keys: {\n    top: \"7%\",\n    height: 42,\n    width: \"92%\",\n    borderRadius: 20,\n    marginTop: 25,\n    alignItems: \"center\",\n    backgroundColor: '#4D1A70',\n    textAlign: \"center\"\n  },\n  develop: {\n    marginBottom: 20,\n    textAlign: \"center\",\n    top: '32%'\n  }\n});\nexport default function ApiScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    api_publica: \"\",\n    api_secreta: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  function handleChange(text, eventName) {\n    setValues(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, eventName, text));\n    });\n  }\n\n  function getUid() {\n    var user;\n    return _regeneratorRuntime.async(function getUid$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.auth().currentUser);\n\n          case 2:\n            user = _context.sent;\n\n            if (!(user === null)) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", null);\n\n          case 7:\n            return _context.abrupt(\"return\", user.uid);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function Keys() {\n    var uid, api_publica, api_secreta, ref;\n    return _regeneratorRuntime.async(function Keys$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getUid());\n\n          case 2:\n            uid = _context2.sent;\n            console.log(uid);\n            api_publica = values.api_publica, api_secreta = values.api_secreta;\n            firebase.firestore().collection('Usuarios').doc(uid).set({\n              values: values\n            });\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(firebase.firestore().collection('Usuarios').doc(uid).get(values));\n\n          case 8:\n            ref = _context2.sent;\n            console.log(ref.data()).then(function () {}).catch(function (error) {\n              alert(error.message);\n            });\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.view\n  }, React.createElement(ImageBackground, {\n    source: require(\"../Img/fondo_keys.png\"),\n    style: styles.fondo\n  }, React.createElement(TextInput, {\n    style: styles.textbox_keys,\n    color: \"#FFF\",\n    placeholder: \"INGRESE API PUBLICA\",\n    placeholderTextColor: \"#FFF\",\n    onChangeText: function onChangeText(text) {\n      return handleChange(text, \"api_publica\");\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textbox_keys,\n    color: \"#FFF\",\n    placeholder: \"INGRESE API SECRETA\",\n    placeholderTextColor: \"#FFF\",\n    onChangeText: function onChangeText(text) {\n      return handleChange(text, \"api_secreta\");\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: \"92%\"\n    }\n  }, React.createElement(Btn, {\n    onClick: function onClick() {\n      return Keys() + navigation.navigate(\"Configuracion_bot\");\n    },\n    title: \"INICIAR\",\n    style: {\n      width: \"50%\",\n      backgroundColor: \"#FBBA00\",\n      top: \"25%\",\n      fontSize: 30\n    }\n  })), React.createElement(View, {\n    style: styles.develop\n  }, React.createElement(Text, {\n    style: {\n      color: \"#FBBA00\",\n      fontSize: 10,\n      fontWeight: \"700\"\n    }\n  }, \"DEVELOPED BY CONDOR COIN\"))));\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/copia_login_bot/LoginApp/screens/Api.js"],"names":["React","useState","Btn","firebase","styles","StyleSheet","create","view","flex","width","justifyContent","alignItems","fondo","height","resizeMode","marginBottom","textbox_keys","top","borderRadius","marginTop","backgroundColor","textAlign","develop","ApiScreen","navigation","api_publica","api_secreta","values","setValues","handleChange","text","eventName","prev","getUid","auth","currentUser","user","uid","Keys","console","log","firestore","collection","doc","set","get","ref","data","then","catch","error","alert","message","require","flexDirection","navigate","fontSize","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Text, View, StyleSheet,ImageBackground,TextInput } from \"react-native\"\r\nimport Btn from \"../components/Btn\"\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n\r\n\r\n\r\n\r\n//Estilos \r\n\r\nconst styles = StyleSheet.create({\r\n    view: {\r\n        flex: 2,\r\n        width: \"100%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        \r\n        \r\n    },\r\n    fondo:{\r\n        flex: 2,\r\n        height:'100%',\r\n        width: '100%',\r\n        resizeMode:'contain',\r\n        alignItems:'center', \r\n        justifyContent: \"center\",\r\n        marginBottom: \"-10%\"   \r\n        \r\n    },\r\n    textbox_keys:{\r\n        top:\"7%\",\r\n        height: 42,\r\n        width: \"92%\",\r\n        borderRadius: 20,\r\n        marginTop: 25,\r\n        alignItems: \"center\",\r\n        backgroundColor:'#4D1A70',\r\n        textAlign:\"center\",\r\n    },\r\n\r\n    develop:{ \r\n    marginBottom: 20 , \r\n    textAlign:\"center\",\r\n    top:'32%'\r\n    }\r\n})\r\n\r\n//Funcion principal para registrar llaves en base de datos firebase-firestore\r\nexport default function ApiScreen({ navigation}) {\r\n\r\n    const [values, setValues] = useState({\r\n     \r\n        api_publica: \"\",\r\n        api_secreta: \"\"\r\n    })\r\n\r\n    function handleChange(text, eventName) {\r\n        setValues(prev => {\r\n            return {\r\n                ...prev,\r\n                [eventName]: text\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    async function getUid() {\r\n        const user = await firebase.auth().currentUser\r\n        if (user === null){\r\n            return null\r\n        }else{\r\n            return user.uid;\r\n        } \r\n    \r\n    }\r\n    \r\n    async function Keys(){\r\n        \r\n        const  uid = await getUid()\r\n        console.log(uid);\r\n        const { api_publica, api_secreta } = values\r\n        firebase.firestore().collection('Usuarios').doc(uid).set({\r\n            values\r\n        })\r\n\r\n        const ref = await firebase.firestore().collection('Usuarios').doc(uid).get(values)\r\n            console.log(ref.data())\r\n\r\n            .then(() => {\r\n\r\n            })\r\n            .catch((error) => {\r\n                alert(error.message)\r\n              \r\n            });\r\n     \r\n\r\n    }\r\n\r\n    //Front pagina para registrar llaves \r\n\r\n    return <View style={styles.view}>\r\n\r\n        <ImageBackground source={require('../Img/fondo_keys.png')} style={styles.fondo}>\r\n\r\n            <TextInput style={styles.textbox_keys} color =\"#FFF\" placeholder=\"INGRESE API PUBLICA\" placeholderTextColor=\"#FFF\" onChangeText={text => handleChange(text, \"api_publica\")} />\r\n            <TextInput style={styles.textbox_keys } color =\"#FFF\"  placeholder=\"INGRESE API SECRETA\" placeholderTextColor=\"#FFF\" onChangeText={text => handleChange(text, \"api_secreta\")}  />\r\n            <View style={{ flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\", width: \"92%\", }}>\r\n                <Btn onClick={() => Keys() + navigation.navigate(\"Configuracion_bot\")} title=\"INICIAR\" style={{ width: \"50%\",backgroundColor: \"#FBBA00\",top:\"25%\",fontSize: 30 }} />    \r\n            </View>\r\n\r\n            <View style={styles.develop}>\r\n                <Text style={{color:\"#FBBA00\",fontSize: 10,fontWeight: \"700\",}}>DEVELOPED BY CONDOR COIN</Text>\r\n            </View>\r\n\r\n\r\n        </ImageBackground>\r\n    </View>\r\n}"]},"metadata":{},"sourceType":"module"}